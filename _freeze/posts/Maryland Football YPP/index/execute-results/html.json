{
  "hash": "9983a26bfd37c1b0e8e015350e535749",
  "result": {
    "markdown": "::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlogs <- read_csv(\"https://thescoop.org/sports-data-files/footballlogs1123.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 19934 Columns: 55\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (8): HomeAway, Opponent, Result, TeamFull, TeamURL, Outcome, Team, Con...\ndbl  (46): Game, PassingCmp, PassingAtt, PassingPct, PassingYds, PassingTD, ...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(logs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 55\n   Game Date       HomeAway Opponent  Result    PassingCmp PassingAtt PassingPct\n  <dbl> <date>     <chr>    <chr>     <chr>          <dbl>      <dbl>      <dbl>\n1     1 2011-09-03 <NA>     Louisiana W (61-34)         28         43       65.1\n2     2 2011-09-08 <NA>     Arizona   W (37-14)         42         53       79.2\n3     3 2011-09-17 @        Tulsa     W (59-33)         29         40       72.5\n4     4 2011-09-24 @        Texas A&M W (30-29)         47         60       78.3\n5     5 2011-10-08 <NA>     Kansas    W (70-28)         38         49       77.6\n6     6 2011-10-15 @        Texas     W (38-26)         23         41       56.1\n# ℹ 47 more variables: PassingYds <dbl>, PassingTD <dbl>, RushingAtt <dbl>,\n#   RushingYds <dbl>, RushingAvg <dbl>, RushingTD <dbl>, OffensivePlays <dbl>,\n#   OffensiveYards <dbl>, OffenseAvg <dbl>, FirstDownPass <dbl>,\n#   FirstDownRush <dbl>, FirstDownPen <dbl>, FirstDownTotal <dbl>,\n#   Penalties <dbl>, PenaltyYds <dbl>, Fumbles <dbl>, Interceptions <dbl>,\n#   TotalTurnovers <dbl>, TeamFull <chr>, TeamURL <chr>, Outcome <chr>,\n#   TeamScore <dbl>, OpponentScore <dbl>, DefPassingCmp <dbl>, …\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwinloss <- logs |> \n  mutate(\n    wins = case_when(\n      grepl(\"W\", Outcome) ~ 1, \n      grepl(\"L\", Outcome) ~ 0)\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwinloss |>\n  filter(Team == \"Maryland\") |>\n  group_by(Season) |>\n  summarise(\n    TotalPlays = sum(OffensivePlays),\n    TotalYards = sum(OffensiveYards), \n    DefensivePlays = sum(DefPlays), \n    DefensiveYards = sum(DefYards),\n    TotalWins = sum(wins)) |>\n  mutate(\n    OffensiveYPP = TotalYards/TotalPlays, \n    DefensiveYPP = DefensiveYards/DefensivePlays) -> ypp\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() + \n  geom_point(\n    data=ypp, aes(x=OffensiveYPP, y=DefensiveYPP)\n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() + \n  geom_point(\n    data=ypp, \n    aes(x=OffensiveYPP, y=DefensiveYPP, size=TotalWins)\n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() + \n  geom_point(\n    data=ypp, \n    aes(x=OffensiveYPP, y=DefensiveYPP, size=TotalWins),\n    alpha = .3) + \n  scale_size(range = c(3, 8), name=\"Wins\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggrepel)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() + \n  geom_point(\n    data=ypp, \n    aes(x=OffensiveYPP, y=DefensiveYPP, size=TotalWins), \n    color=\"red\", \n    alpha=.5) + \n  geom_text_repel(\n    data=ypp,\n    aes(x=OffensiveYPP, y=DefensiveYPP, label=Season)) +\n  labs(title=\" Maryland's Offense Lacks where Their Defense Picks Up\", subtitle=\"The Terps have seen more wins when their defense and offense worked together.\", caption=\"Source: NCAA | By Alexa Henry\")  + theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank()\n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\nMaryland totaled two wins during the COVID year when teams didn't really know what was going on in the College Football conferences. This was when the defense gave up less yards and their offense ran for more yards. However, looking into this season, 2023 so far it shows that they are totaling more wins when the offense is running, you know, doing their job, and the defense is is giving up less yards. Although, 2023  season isn't over, it would be interesting to see where the bubble lands after the season concludes. Maybe to show this, we can filter by dates but that would cut off the full season for the other seasons.\n\nThis idea conflicts with years like 2014 when the offense wasn't running as much and the defense was giving up more yards compared to other years. It also shows the progression of their offense since the Coach Lock era. Minus 2020, 2020 was a fluke for everyone. ",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}